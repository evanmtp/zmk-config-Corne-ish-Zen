/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define AUTOCAP 3
#define ADJUST 4

#define AS(keycode) &as LS(keycode) keycode

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <3 4 5>;
            bindings = <&tog AUTOCAP>;
        };
        combo_config {
            timeout-ms = <50>;
            key-positions = <38 41>;
            bindings = <&tog CONFIG>;
        };
    };
 };

/ {
        behaviors {
            as: auto_shift {
                compatible = "zmk,behavior-hold-tap";
                label = "AUTO_SHIFT";
                #binding-cells = <2>;
                tapping_term_ms = <125>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// | TAB       | Q         | W         | E         | R         | T         |   | Y         | U          | I         | O         | P         | BKSP       |
// | ESC       | A         | S         | D         | F         | G         |   | H         | J          | K         | L         | ;         | '          |
// | SHFT      | Z         | X         | C         | V         | B         |   | N         | M          | ,         | .         | /         | RET        |
//                                     | CTRL      | LWR       | GUI       |   | SPC       | RSE        | ALT       |
                        bindings = <
     &kp TAB     AS(Q)       AS(W)       AS(E)       AS(R)       AS(T)          AS(Y)       AS(U)       AS(I)       AS(O)       AS(P)       &kp BSPC
     &kp ESC     AS(A)       AS(S)       AS(D)       AS(F)       AS(G)          AS(H)       AS(J)       AS(K)       AS(L)       AS(SEMI)    AS(SQT)
     &kp LSHFT   AS(Z)       AS(X)       AS(C)       AS(V)       AS(B)          AS(N)       AS(M)       AS(COMMA)   AS(DOT)     AS(FSLH)    &kp RET
                                         &kp LCTRL   &mo 1       &kp LGUI       &kp SPACE   &mo 2       &kp RALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// | ~         | !         | @         | #         | $         | %         |   | ^         | &         | *         | (         | )         | BKSP       |
// | ESC       |           |           |           |           |           |   |           | _         | +         | {         | }         | |          |
// | SHFT      |           |           |           |           |           |   |           | LFT       | DWN       | UP        | RGT       | RET        |
//                                     |  CTRL     |           | SPC       |   | SPC       |           | ALT       |
                        bindings = <

     AS(TILDE)   AS(EXCL)    AS(AT)      AS(HASH)    AS(DLLR)    AS(PRCNT)       AS(CARET)   AS(AMPS)    AS(KP_MULTIPLY) AS(LPAR) AS(RPAR)   &kp BSPC
     &kp ESC     &trans      &trans      &trans      &trans      &trans          &trans      AS(UNDER)   AS(PLUS)    AS(LBRC)    AS(RBRC)    AS(PIPE)
     &kp LSHFT   &trans      &trans      &trans      &trans      &trans          &trans      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp RET
                                         &kp LCTRL   &trans      &kp SPACE       &kp SPACE   &trans      &kp RALT

//     &kp TILDE   &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT       &kp CARET   &kp AMPS    &kp KP_MULTIPLY &kp LPAR &kp RPAR   &kp BSPC
//     &trans      &trans      &trans      &trans      &trans      &trans          &trans      &kp UNDER   &kp PLUS   &kp LBRC     &kp RBRC    &kp PIPE
//     &kp LSHFT   &trans      &trans      &trans      &trans      &trans          &kp LEFT    &kp DOWN    &kp UP     &kp RIGHT    &trans      &kp RET
//                                         &kp LCTRL   &trans      &kp SPACE       &kp SPACE   &trans      &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | `         | 1         | 2         | 3         | 4         | 5         |   | 6         | 7         | 8         | 9         | 0        | BKSP       |
// | ESC       |           |           |           |           |           |   |           | -         | =         | [         | ]        | \          |
// | SHFT      |           |           |           |           |           |   |           | LFT       | DWN       | UP        | RGT      | RET        |
//                                     | CTRL      |           | SPC       |   | SPC       |           | ALT       |
                        bindings = <
     AS(GRAVE)   AS(N1)      AS(N2)      AS(N3)      AS(N4)      AS(N5)          AS(N6)      AS(N7)      AS(N8)      AS(N9)      AS(N0)     &kp BSPC
     &kp ESC     &trans      &trans      &trans      &trans      &trans          &trans      AS(MINUS)   AS(EQUAL)   AS(LBKT)    AS(RBKT)   AS(BSLH)
     &kp LSHFT   &trans      &trans      &trans      &trans      &trans          &trans      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT  &kp RET
                                         &kp LCTRL   &trans      &kp SPACE       &kp SPACE   &trans      &kp RALT

//     &kp GRAVE   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5          &kp N6      &kp N7      &kp N8      &kp N9      &kp N0     &kp BSPC
//     &kp ESC     &trans      &trans      &trans      &trans      &trans          &trans      &kp MINUS   &kp EQUAL   &kp LBKT    &kp RBKT   &kp BSLH
//     &kp LSHFT   &trans      &trans      &trans      &trans      &trans          &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp PIPE   &kp RET
//                                         &kp LCTRL   &trans      &kp SPACE       &kp SPACE   &trans      &kp RALT
                        >;
                };

                config_layer {
                        label = "CONFIG";
                        bindings = <
   &reset     &none        &none        &none        &none        &none           &none &none &none &none &none &none 
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &none &none &none &none &none &none
   &none      &none        &none        &none        &none        &none           &none &none &none &none &none &none
                                                &mo CONFIG &kp LCTL &mo NUMROW    &kp SPC &mo ADJUST &kp F13
                        >;
                };
        };
};